@page "/weather"
@using System.Diagnostics.Metrics
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<MudPaper Class="p-4">
    <MudText Typo="Typo.h5" Class="mb-2">Weather</MudText>
    <MudText Class="mb-4">Converted to MudTable...Ta da!</MudText>

    @if (forecasts is null)
    {
        <MudStack Row align-center Spacing="2">
            <MudProgressCircular Indeterminate="true" />
            <MudText><em>Loading...</em></MudText>
        </MudStack>
    }
    else
    {
        <MudTable Items="@forecasts" Dense="true" Hover="true" Striped="true" Bordered="true">
            <HeaderContent>
                <MudTh>Date</MudTh>
                <MudTh>Temp. (C)</MudTh>
                <MudTh>Temp. (F)</MudTh>
                <MudTh>Summary</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
                <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
                <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
                <MudTd DataLabel="Summary">@context.Summary</MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <MudText Class="p-4">No data.</MudText>
            </NoRecordsContent>
        </MudTable>
    }
</MudPaper>

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
